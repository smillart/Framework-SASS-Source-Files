@use 'sass:map';


/// Default spacing value.
/// Assumes the browser default, typically `16px`.
///
/// @type Number

$spacer: 1rem !default;


/// Map of common spacing values.
///
/// @prop {Number} 0 [0]
///   - Spacing egals to 0.
///
/// @prop {Number} 1 [0.125rem]
///   - Assuming 16px as default spacing, this variation egals to 2px.
///
/// @prop {Number} 2 [0.25rem]
///   - Assuming 16px as default spacing, this variation egals to 4px.
///
/// @prop {Number} 3 [0.375rem]
///   - Assuming 16px as default spacing, this variation egals to 6px.
///
/// @prop {Number} 4 [0.5rem]
///   - Assuming 16px as default spacing, this variation egals to 8px.
///
/// @prop {Number} 5 [0.625rem]
///   - Assuming 16px as default spacing, this variation egals to 10px.
///
/// @prop {Number} 6 [0.75rem]
///   - Assuming 16px as default spacing, this variation egals to 12px.
///
/// @prop {Number} 7 [0.875rem]
///   - Assuming 16px as default spacing, this variation egals to 14px.
///
/// @prop {Number} 8 [1rem]
///   - Assuming 16px as default spacing, this variation egals to 16px.
///
/// @prop {Number} 9 [1.125rem]
///   - Assuming 16px as default spacing, this variation egals to 18px.
///
/// @prop {Number} 10 [1.25rem]
///   - Assuming 16px as default spacing, this variation egals to 20px.
///
/// @require {function} map.merge
/// @see {function} spacing.get-spacer
///
/// @type Map

$spacers: () !default;
$spacers: map.merge(
  (
    '0': 0,
    '1': ($spacer * 0.125),
    '2': ($spacer * 0.25),
    '3': ($spacer * 0.375),
    '4': ($spacer * 0.5),
    '5': ($spacer * 0.625),
    '6': ($spacer * 0.75),
    '7': ($spacer * 0.875),
    '8': $spacer,
    '9': ($spacer * 1.125),
    '10': ($spacer * 1.25),
  ),
  $spacers
);
