@charset 'utf-8';


/// Table variants
///
/// Easily set out variant styles on a specific table.
///
/// @group library
///
/// @param {String} $style
///   - The expected style to be applied.
///
/// @param {String} $table-striped-background-color [$body-base-background-color]
///   - The background color applied on all (Striped rows) tables.
///
/// @param {String} $table-hover-background-color [$primary]
///   - The background color applied on all (Hoverable rows) tables.
///
/// @example scss - Usage.
///   table.table-striped {
///     @include table-variant('striped');
///   }
///   table.table-hover {
///     @include table-variant('hover');
///   }
///
///   // CSS Output
///   //
///   table.table-striped tbody tr:nth-of-type(2n+1) {
///     background-color: #...;
///   }
///   table.table-hover tbody tr:hover {
///     background-color: #...;
///   }
///
/// @requires {variable} body-base-background-color
/// @requires {variable} component-state-background-colors
/// @requires {mixin} background

@mixin table-variant(
  $style,
  $table-striped-background-color: $body-base-background-color,
  $table-hover-background-color: map-get($component-state-background-colors, 'active')
) {

  @if $style == 'striped' {
    
    // Table rows (Odd) inside table bodies
    //
    tbody tr:nth-of-type(odd) {
      @include background($color: darken($table-striped-background-color, 5%));
    }
  }
  @else if $style == 'hover' {

    // Table rows inside table bodies (Hover state)
    //
    tbody tr:hover {
      @include background($color: lighten($table-hover-background-color, 60%));
    }
  }
  @else {
    @warn "Unrecognized or missing style: '#{$style}'";
  }
}
