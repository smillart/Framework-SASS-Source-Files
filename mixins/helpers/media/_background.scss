@charset 'utf-8';


/// Mixin for background images with retina fallback.
///
/// @group helpers
///
/// @param {Color | Bool} $color [false]
///   - Specifies the background color to be used.
///
/// @param {String | Bool} $image [false]
///   - Specifies the file name of the background image to be used.
///
/// @param {Length | String | Bool} $image-size [false]
///   - Specifies the size of the background image.
///
/// @param {String} $image-path [$image-folder-path]
///   - Specifies the folder path to the background image to be used.
///
/// @param {String} $image-extension [$image-fallback-extension]
///   - Specifies the file extension of the background image to be used (ex: png, jpg, svg...).
///
/// @param {String} $image-repeat [no-repeat]
///   - Specifies how to repeat the background image.
///
/// @param {List} $image-position [center center]
///   - Specifies the position (offsets from bottom and/or right edges) of the background image.
///
/// @param {Bool} $retina-fallback [$enable-retina-fallback]
///   - Specifies the use or not use of the retina fallback.
///
/// @param {String} $retina-suffix [$image-retina-suffix]
///   - Specifies the suffix for image with retina fallback.
///
/// @param {Length | String} $retina-width [auto]
///   - Specifies the image width using retina fallback.
///
/// @param {Length | String} $retina-height [auto]
///   - Specifies the image height using retina fallback.
///
/// @example scss
///   .bg-color {
///     @include background($color: #fff);
///   }
///   .bg-image {
///     @include background($image: 'my-picture', $image-extension: 'jpg', $image-position: left top);
///   }
///   .bg-image-cover {
///     @include background($image: 'my-wallpaper', $image-size: cover);
///   }
///   .bg-image-retina {
///     @include background($image-path: '../../images/icons', $image: 'download', $retina-fallback: true, $retina-width: 300px, $retina-height: 60px);
///   }
///
///   // CSS Output
///   //
///   .bg-color {
///     background-color: #FFF;
///   }
///   .bg-image {
///     background-image: url(../../images/my-picture.jpg);
///     background-repeat: no-repeat;
///     background-position: left top;
///   }
///   .bg-image-cover {
///     background-image: url(../../images/my-wallpaper.png);
///     background-repeat: no-repeat;
///     background-position: center center;
///     background-size: cover;
///   }
///   .bg-image-retina {
///     background-image: url(../../images/icons/download.png);
///     background-repeat: no-repeat;
///     background-position: center center;
///
///     @media only screen and (-webkit-min-device-pixel-ratio: 2), ..., only screen and (min-resolution: 2dppx) {
///       background-image: url(../../images/icons/download@2x.png);
///       background-size: 300px 60px;
///     }
///   }
///
/// @requires {variable} image-folder-path
/// @requires {variable} image-retina-suffix
/// @requires {variable} image-fallback-extension
/// @requires {variable} image-retina-media-query
/// @requires {variable} enable-retina-fallback

@mixin background(
  $color: false,
  $image: false,
  $image-size: false,
  $image-path: $image-folder-path,
  $image-extension: $image-fallback-extension,
  $image-repeat: no-repeat,
  $image-position: center center,
  $retina-fallback: $enable-retina-fallback,
  $retina-suffix: $image-retina-suffix,
  $retina-width: auto,
  $retina-height: auto
) {

  background: {

    @if $color {
      color: $color;
    }

    @if $image {
      image: url(#{$image-path}/#{$image}.#{$image-extension});
      repeat: $image-repeat;
      position: $image-position;
      @if $image-size {
        size: $image-size;
      }
    }
  }

  @if $image and $retina-fallback {
    @media #{$image-retina-media-query} {
      background: {
        image: url(#{$image-path}/#{$image}#{$retina-suffix}.#{$image-extension});
        size: $retina-width $retina-height;
      }
    }
  }
}
