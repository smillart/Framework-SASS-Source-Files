@charset 'utf-8';
@use '../../options/enable/legacy' as *;


/// Only display content to screen readers.
///
/// @group helpers
///
/// @link http://a11yproject.com/posts/how-to-hide-content
///   - How-to: Hide content - The A11Y Project
///
/// @link http://hugogiraudel.com/2016/10/13/css-hide-and-seek/
///   - CSS Hide-and-Seek
///
/// Extending (@extend) is not possible across media contexts. Reasons why we cannot
/// extend across different media contexts are strictly technical at this point.
/// Still, this is something quite annoying to deal with. To work around this issue,
/// the less worse idea is to wrap placeholders with a mixin so you can choose either
/// to '@extend' or to '@include', depending on whether your in a '@media' block or not.
///
/// @param {Bool} $extend [true]
///   - Choose either to '@extend' or to '@include', depending on whether your
///     in a '@media' block or not.
///
/// @example scss - Default usage.
///   @use '[root_path]/_sass-framework/helpers/a11y';
///
///   .element {
///     @include a11y.visually-hidden;
///   }
///
///   // CSS Output
///   //
///   .element {
///     position: absolute !important;
///     clip: rect(1px, 1px, 1px, 1px) !important;
///     clip-path: inset(50%) !important;
///     overflow: hidden !important;
///     width: 1px !important;
///     height: 1px !important;
///     padding: 0 !important;
///     border: 0 !important;
///     white-space: nowrap !important;
///   }
///
/// @example scss - Usage across '@media' context.
///   @use '[root_path]/_sass-framework/helpers/a11y';
///
///   .element {
///     @include breakpoint.up('medium') {
///       @include a11y.visually-hidden($extend: false);
///     }
///   }
///
///   // CSS Output
///   //
///   @media (min-width: 768px) {
///     .element {
///       position: absolute !important;
///       clip: rect(1px, 1px, 1px, 1px) !important;
///       clip-path: inset(50%) !important;
///       overflow: hidden !important;
///       width: 1px !important;
///       height: 1px !important;
///       padding: 0 !important;
///       border: 0 !important;
///       white-space: nowrap !important;
///     }
///   }
///
/// @require {placeholder} visually-hidden-defaults
/// @require {variable} legacy-support-for-ie6
/// @require {variable} legacy-support-for-ie7

@mixin visually-hidden(
  $extend: true
) {

  @if $extend {
    @extend %visually-hidden-defaults;
  }
  @else {
    position: absolute !important;
    @if ($legacy-support-for-ie6 or $legacy-support-for-ie7) {
      clip: rect(1px 1px 1px 1px) !important; // IE6 and IE7 use the wrong syntax.
    }
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
    overflow: hidden !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    border: 0 !important;
    white-space: nowrap !important;
  }
}
